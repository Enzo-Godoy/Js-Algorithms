Manipulating Complex Objects
To store data in a flexible Data Structure. A Js object is one way to handle flexible data. 
 They allow us for arbitrary combinations of strings, numbers, booleans, arrays, functions and objects.

 Example of a complex data structure.
 var ourMusic = [
 	{
 	"artist": "Daft Punk",
 	"title": "Homework",
 	"release_year": 1997,
 	"formats": ["CD","Cassette","LP"],
 	"gold": true
 	}

 ]; 

 This is an array wich contains one object inside. 
 	The object has various pieces of metada about an album. 
 	It also has a nested "formats" array.

//Objects hold data in a property, wich has a key-value format. 

Javascript Object Notation or JSON is related data interchange format used to store data. 


{
 	"artist": "Daft Punk",
 	"title": "Homework",
 	"release_year": 1997,
 	"formats": ["CD","Cassette","LP"],
 	"gold": true
 }

 Will need to place a comma after every object in the array, unless it's the last object in the array.


 The sub-properties of objects can be accessed by chainin together the dot or bracket notation. 

 Here is a nested Object : 

 var ourStorage = {
    "desk":{
    	"drawer": "stapler"
    },
    "cabinet": {
    	"top drawer":{
    		"folder1": "a file",
    		"folder2": "secrets"
	    },
	    "bottom drawer": "soda"
    }

};


ourStorage.cabinet["top drawer"].folder2;   //"secrets"
ourStorage.desk.drawer;                  //"stapler"

Objects can contain both nestes objects and nested arrays. 
//Similar to accessing nested objects, Array  bracket notation can be chained to access nested arrays. 

Example of how to access a nested array. 

var ourPets  = [
	{
	 animalType : "cat",
	 names : ["Meowzer","Fluffy","Kit-Cat"]
	},
	{
	animalType  : "dog",
	names : ["Spot","Bowser","Frankie"]
	}
];

ourPets[0].names[1];  //"Fluffy"
ourPets[1].names[0];  //"Spot"

Similar solamente que en arrays cuando seleccionames un sub-dato apuntamos a Ã©l, luego indicamos su indice.




