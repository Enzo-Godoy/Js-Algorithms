Bracket notation on objects to access a property wich is stored as the value of a variable.


Example of using a variable to access a property. 

var dogs = { 
	Fido : "Mutt", Hunter :"Doberman", Snoopie : "Beagle"
}; 
var myDog = "Hunter"; 
var myBreed = dogs[myDog];
console.log(myBreed);  // "Doberman". 


When the property's name is collected dynamically during the programa execution. 

var someObj = { 
propName : "John"
}; 
function propPrefix(str) { 
	var s = "prop";
	return s + str; 
}
var someProp = propPrefix("Name");  //var someProms holds propname value'
console.log(someObj[someProp]);  //"John"

//This it's hard to figure out, so we don't use quotes around the variable name when using it to access the property because we are using the value of the variable, not the name.

After we've created a Js object, we can update its properties at any time just like we would update any other variable. 
 //We can use either dot or bracket notation to update. 

 Example

 var ourDog = {
 	"name" : "Camper", 
 	"legs" : 4, 
 	"tails": 1, 
 	"friends": ["everything!"]
 };


 Example of update his name (camper). 

 ourDog.name = "Happy Camper";

 ourDog["name"] = "Happy Camper"; 



 We add new properties to existing Javascript Objects the same way we would modify them. 

 Example : 
 ourDog.bark = "bow-wow";

 or with bracket notation. 
 ourDog["bark"] = "bow-wow";

 

